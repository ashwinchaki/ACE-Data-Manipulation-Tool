library("car")
install.packages("car")
install.packages("RColorBrewer")
library("RColorBrewer")
library("car")
library("RColorBrewer")
akili = read.csv("/Users/Jeff/Documents/Akili/Statistical Analysis/2012-feasibility.csv")
# We are mostly interested in first 4 variables
akiliAut <- subset(akili, Type=="Autistic")
akiliSPD <- subset(akili, Type=="SPD")
akiliControl <- subset(akili, Type=="Controls")
### example on splitting across type using 'split' function instead
tmp <- split(akiliBase, akili$Type)
dev.new(8,8)
scatterplotMatrix(akiliBase)
source('~/Documents/Akili/Statistical Analysis/R script')
agecount <- function(age = NULL) {
install.packages("RTextTools")
source('~/Development/R Scripts/RText Examples/breast cancer classifier.r')
data
training_data
data
# FILE: Classifying Breast Cancer as Benign or Malignant
# AUTHOR: Timothy P. Jurka
library(RTextTools);
# GET THE BREAST CANCER DATA FROM http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.names
data <- read.csv("http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data",header=FALSE)
data <- data[-1]
# ADD TEXTUAL DESCRIPTORS FOR EACH MASS CHARACTERISTIC FOR THE DOCUMENT-TERM MATRIX
thick <- as.vector(apply(as.matrix(data[1], mode="character"),1,paste,"clump",sep="",collapse=""))
size <- as.vector(apply(as.matrix(data[2], mode="character"),1,paste,"size",sep="",collapse=""))
shape <- as.vector(apply(as.matrix(data[3], mode="character"),1,paste,"shape",sep="",collapse=""))
adhesion <- as.vector(apply(as.matrix(data[4], mode="character"),1,paste,"adhesion",sep="",collapse=""))
single <- as.vector(apply(as.matrix(data[5], mode="character"),1,paste,"single",sep="",collapse=""))
nuclei <- as.vector(apply(as.matrix(data[6], mode="character"),1,paste,"nuclei",sep="",collapse=""))
chromatin <- as.vector(apply(as.matrix(data[7], mode="character"),1,paste,"chromatin",sep="",collapse=""))
nucleoli <- as.vector(apply(as.matrix(data[8], mode="character"),1,paste,"nucleoli",sep="",collapse=""))
mitoses <- as.vector(apply(as.matrix(data[9], mode="character"),1,paste,"mitoses",sep="",collapse=""))
training_data <- cbind(data[10],thick,size,shape,adhesion,single,nuclei,chromatin,nucleoli,mitoses)
training_data
# [OPTIONAL] SUBSET YOUR DATA TO GET A RANDOM SAMPLE
training_data <- training_data[sample(1:699,size=600,replace=FALSE),]
training_codes <- training_data[1]
training_data <- training_data[-1]
# CREATE A TERM-DOCUMENT MATRIX THAT REPRESENTS WORD FREQUENCIES IN EACH DOCUMENT
# WE WILL TRAIN ON THE Title and Subject COLUMNS
matrix <- create_matrix(training_data, language="english", removeNumbers=FALSE, stemWords=FALSE, removePunctuation=FALSE, weighting=weightTfIdf)
install.packages("tm")
source('~/Development/R Scripts/RText Examples/breast cancer classifier.r')
source('~/.active-rstudio-document')
analytics
analytics@ensemble_summary
analytics@algorithm_summary
results
matrix
install.packages("RMySQL")
install.packages("RODBC")
source('~/.active-rstudio-document')
library(RODBC)
#set a connection to the database
conn <- odbcConnect(dsn="localhost", uid="root", pwd="")
library(RODBC)
#set a connection to the database
conn <- odbcConnect(dsn="localhost", uid="root", pwd="")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
trainrows <- which(alldata$trainset == 1)
source('~/.active-rstudio-document')
install.packages("gbm")
source('~/.active-rstudio-document')
trainrows
scorerows
length(trainrows)
length(scorerows)
colname(alldata)
colnames(alldata)
memberid
alldata
;
colnames(alldata)
memberid <- alldata[scorerows,'MemberID_t']
memberid
starttime <- proc.time()
########################################
#load the data
########################################
library(RMySQL)
conn <- dbConnect(MySQL(), user='root', dbname='HHP_comp', host='localhost', password='')
alldata <- dbGetQuery(conn,"select * from HHP_comp.modelling_set")
trainrows <- which(alldata$trainset == 1)
scorerows <- which(alldata$trainset == 0)
memberid <- alldata[scorerows,'MemberID_t']
memberid
colnames(alldata)
#remove redundant fields
alldata$MemberID_t <- NULL
alldata$YEAR_t <- NULL
alldata$trainset <- NULL
#target - what we are predicting
theTarget <- 'DaysInHospital'
alldata[trainrows,theTarget]
log1p(alldata[trainrows,theTarget])
expm1(.2)
expm1(1)
log1p(1)
expm1(.6931472)
hist(prediction, breaks=50)
write.csv(submission, file=fnname, row.names = FALSE)
source('~/.active-rstudio-document')
prediction
prediction <- predict.gbm(object = GBM_model
,newdata = alldata[scorerows,-targindex]
,GBM_NTREES)
prediction
expm1(prediction)
pmin(15,prediction)
pmax(0,prediction)
help("pmin")
install.packages(c("rjson","plyr","httr"))
install.packages("devtools")
library(devtools)
install_github("ropensci/elastic")
library(elastic)
init <- es_connect(url="http://10.226.4.20", port=9200)
es_search(init, index="ekho2")
#install_github("ropensci/elastic")
source('~/Documents/Ekho/R Scripts/R interaction histogram.R')
source('~/Documents/Ekho/R Scripts/R interaction histogram.R')
#install.packages("rjson","plyr","httr")
#install.packages("devtools")
library(devtools)
#install_github("ropensci/elastic")
library(elastic)
init <- es_connect(url="http://10.226.4.20", port=9200)
es_search(init, index="ekho2")
source('~/.active-rstudio-document')
ekhoCSV <- read.delim("export-54346cdee4b078c5082b1c20.csv",
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(ekhoCSV)
View(ekhoCSV)
View(ekhoCSV)
View(ekhoCSV)
source('~/.active-rstudio-document')
View(specificRows)
View(specificRows)
source('~/.active-rstudio-document')
install.packages("rmongodb")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('~/.active-rstudio-document')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('~/.active-rstudio-document')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace-mongo.r')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Desktop/ekhocsv.r')
View(ekhoCSV)
View(ekhoCSV)
View(ekhoCSV)
View(ekhoCSV)
View(ekhoCSV)
View(ekhoCSV)
source('/Applications/XAMPP/xamppfiles/htdocs/UCSF/datamart/Brighten/R Scripts/brigten-ace.r')
source('~/Desktop/ekhocsv.r')
View(ekhoCSV)
View(ekhoCSV)
